#cloud-config
package_update: true
package_upgrade: true
package_reboot_if_required: true

locale: en_US.UTF-8
timezone: Europe/Amsterdam

packages:
  - vim
  - podman
  - nftables

write_files:
  - path: /etc/sysconfig/nftables.conf
    owner: root:root
    permissions: "0644"
    content: |
      flush ruleset
      table inet nftables_svc {
        set allowed_protocols {
          type inet_proto
          elements = { icmp, icmpv6 }
        }
        set allowed_interfaces {
          type ifname
          elements = { "lo", "podman0", "veth0", "veth1" }
        }
        set allowed_tcp_dports {
          type inet_service
          elements = { 21, 22, 80, 443 }
        }
        chain allow {
          ct state established,related accept
          meta l4proto @allowed_protocols accept
          iifname @allowed_interfaces accept
          tcp dport @allowed_tcp_dports accept
        }
        chain INPUT {
          type filter hook input priority filter + 20
          policy accept
          jump allow
          reject with icmpx type port-unreachable
        }
      }
  - path: /etc/containers/networks/podman.json
    owner: root:root
    permissions: "0644"
    content: |
      {
        "name": "podman",
        "id": "2f259bab93aaaaa2542ba43ef33eb990d0999ee1b9924b557b7be53c0b7a1bb9",
        "driver": "bridge",
        "network_interface": "podman0",
        "created": "2024-03-13T19:40:29.895534643+01:00",
        "subnets": [
          {
            "subnet": "10.88.0.0/16",
            "gateway": "10.88.0.1"
          }
        ],
        "ipv6_enabled": false,
        "internal": false,
        "dns_enabled": true,
        "ipam_options": {
          "driver": "host-local"
        }
      }
  - path: /etc/nginx/nginx.conf
    owner: root:root
    permissions: "0644"
    content: |
      user nginx;
      worker_processes auto;
      error_log /var/log/nginx/error.log;
      pid /run/nginx.pid;

      include /usr/share/nginx/modules/*.conf;

      events {
          worker_connections 1024;
      }

      http {
          access_log off;
          resolver 10.88.0.1;  # !! DNS server for podman network
          sendfile            on;
          tcp_nopush          on;
          keepalive_timeout   65;
          types_hash_max_size 4096;
          include             /etc/nginx/mime.types;
          default_type        application/octet-stream;
          gzip on;
          gzip_types text/plain text/css application/json application/javascript text/xml application/xml application/xml+rss text/javascript application/x-javascript;
          proxy_cache_path /var/cache/nginx/ keys_zone=dfmsite:10m;
          proxy_cache_revalidate on;
          proxy_cache_use_stale error timeout updating http_500 http_502 http_503 http_504;
          proxy_cache_background_update on;
          proxy_cache_lock on;
          proxy_request_buffering off;
          ssl_session_cache    shared:SSL:1m;
          ssl_session_timeout  10m;

          server {
              listen 80 default_server;
              listen [::]:80 default_server;
              server_name _;
              return 404;
          }

            server {
              listen 443 ssl default_server;
              listen [::]:443 ssl default_server;
              server_name _;
              ssl_reject_handshake on;
              return 404;
          }

          server {
            listen 80;
            listen [::]:80;
            server_name "uitzendinggemist-dinxperfm-nl.toffe.site";

            location /.well-known/acme-challenge/ {
              root /var/www/letsencrypt;
            }

            location / {
                return 301 https://www-dinxperfm-nl.toffe.site;
            }
          }
          server {
            listen 443 ssl;
            listen [::]:443 ssl;
            http2 on;
            server_name "uitzendinggemist-dinxperfm-nl.toffe.site";

            ssl_certificate /etc/letsencrypt/live/$host/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;

            location / {
                return 301 https://www-dinxperfm-nl.toffe.site;
            }
          }

          server {
            listen 80;
            listen [::]:80;
            server_name "stream-dinxperfm-nl.toffe.site";

            location /.well-known/acme-challenge/ {
              root /var/www/letsencrypt;
            }

            location / {
                return 301 https://$host$request_uri;
            }
          }
          server {
            listen 443 ssl;
            listen [::]:443 ssl;
            http2 on;
            server_name "stream-dinxperfm-nl.toffe.site";

            ssl_certificate /etc/letsencrypt/live/$host/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;

            proxy_connect_timeout 3s;

            location / {
              set $upstream "http://dinxperfm.freeddns.org:8082";
              proxy_pass $upstream;
            }
          }

          server {
            listen 80;
            listen [::]:80;
            server_name "www-dinxperfm-nl.toffe.site";

            location /.well-known/acme-challenge/ {
              root /var/www/letsencrypt;
            }

            location / {
                return 301 https://$host$request_uri;
            }
          }
          server {
            listen 443 ssl;
            listen [::]:443 ssl;
            http2 on;
            server_name "www-dinxperfm-nl.toffe.site";
            ssl_certificate /etc/letsencrypt/live/$host/fullchain.pem;
            ssl_certificate_key /etc/letsencrypt/live/$host/privkey.pem;
            proxy_cache dfmsite;
            add_header X-Cache-Status $upstream_cache_status;

            location / {
              set $upstream "http://systemd-dfmsite.dns.podman:3000";
              proxy_pass $upstream;
            }
          }
      }

  - path: /etc/containers/systemd/dfmsite.container
    owner: root:root
    permissions: "0755"
    content: |
      [Unit]
      Description=DinxperFM - Website

      [Install]
      WantedBy=multi-user.target

      [Container]
      Image=docker.io/dfmsite:latest
      AutoUpdate=local
      Exec=
      ReadOnly=true
      Environment=ORIGIN=https://www-dinxperfm-nl.toffe.site

  - path: /etc/containers/systemd/nginx.container
    owner: root:root
    permissions: "0755"
    content: |
      [Unit]
      Description=nginx

      [Install]
      WantedBy=multi-user.target

      [Service]
      ExecReload=/usr/bin/podman exec systemd-nginx /usr/sbin/nginx -s reload

      [Container]
      Image=docker.io/nginx
      AutoUpdate=registry
      Exec=
      PublishPort=80:80
      PublishPort=443:443
      Volume=/etc/nginx/nginx.conf:/etc/nginx/nginx.conf:z,ro
      Volume=/var/www/letsencrypt:/var/www/letsencrypt:z,ro
      Volume=/etc/letsencrypt:/etc/letsencrypt:z,ro

  - path: /etc/systemd/system/certbot-renew.timer
    owner: root:root
    permissions: "0755"
    content: |
      [Unit]
      Description=Run Certbot renewal script

      [Timer]
      OnCalendar=daily
      RandomizedDelaySec=1h
      Persistent=true

      [Install]
      WantedBy=timers.target

  - path: /etc/systemd/system/certbot-renew.service
    owner: root:root
    permissions: "0755"
    content: |
      [Unit]
      Description=Renew SSL certificates with Certbot

      [Install]
      WantedBy=multi-user.target

      [Service]
      Type=oneshot
      ExecStart=/usr/bin/podman run -it --rm --name certbot -v "/etc/letsencrypt:/etc/letsencrypt:z" -v "/var/lib/letsencrypt:/var/lib/letsencrypt:z" -v "/var/www/letsencrypt:/var/www/letsencrypt:z" certbot/certbot renew

runcmd:
  - systemctl enable nftables && systemctl start nftables
  - mkdir -p /etc/letsencrypt/{live,archive} -p /var/lib/letsencrypt -p /var/www/letsencrypt/.well-known/acme-challenge
  - systemctl enable nginx.service dfmsite.service
  - systemctl enable certbot-renew.service certbot-renew.timer && systemctl start certbot-renew.timer
  - systemctl enable podman-auto-update.service podman-auto-update.timer && systemctl start podman-auto-update.timer
